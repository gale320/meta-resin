From bbdad8b13f61b3c5e36cac913246bee44c7f5cfb Mon Sep 17 00:00:00 2001
From: Petros Angelatos <petrosagg@gmail.com>
Date: Thu, 1 Dec 2016 01:22:40 +0000
Subject: [PATCH 13/15] pkg/archive: make unpacking durable

The unpacking routines are used from various place like `docker pull`.
Before this patch, a power failure right after completion could result
in on-disk corruption. Now we make sure every file is synced to disk
before returning success.

Signed-off-by: Petros Angelatos <petrosagg@gmail.com>
---
 pkg/archive/archive.go |  5 +++++
 pkg/archive/diff.go    | 20 ++++++++++++++++++--
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/pkg/archive/archive.go b/pkg/archive/archive.go
index 1281683..616a05d 100644
--- a/pkg/archive/archive.go
+++ b/pkg/archive/archive.go
@@ -460,6 +460,11 @@ func createTarFile(path, extractDir string, hdr *tar.Header, reader io.Reader, L
 			return err
 		}
 	}
+
+	if err := ioutils.SyncWithParent(path); err != nil {
+		return err
+	}
+
 	return nil
 }
 
diff --git a/pkg/archive/diff.go b/pkg/archive/diff.go
index 1b08ad3..b32b529 100644
--- a/pkg/archive/diff.go
+++ b/pkg/archive/diff.go
@@ -12,6 +12,7 @@ import (
 
 	"github.com/Sirupsen/logrus"
 	"github.com/docker/docker/pkg/idtools"
+	"github.com/docker/docker/pkg/ioutils"
 	"github.com/docker/docker/pkg/pools"
 	"github.com/docker/docker/pkg/system"
 )
@@ -94,6 +95,9 @@ func UnpackLayer(dest string, layer Reader, options *TarOptions) (size int64, er
 				if err != nil {
 					return 0, err
 				}
+				if err := ioutils.SyncWithAncestors(parentPath); err != nil {
+					return 0, err
+				}
 			}
 		}
 
@@ -150,8 +154,11 @@ func UnpackLayer(dest string, layer Reader, options *TarOptions) (size int64, er
 						return nil
 					}
 					if _, exists := unpackedPaths[path]; !exists {
-						err := os.RemoveAll(path)
-						return err
+						if err := os.RemoveAll(path); err != nil {
+							return err
+						}
+
+						return ioutils.SyncDir(filepath.Dir(path))
 					}
 					return nil
 				})
@@ -164,6 +171,9 @@ func UnpackLayer(dest string, layer Reader, options *TarOptions) (size int64, er
 				if err := os.RemoveAll(originalPath); err != nil {
 					return 0, err
 				}
+				if err := ioutils.SyncDir(filepath.Dir(path)); err != nil {
+					return 0, err
+				}
 			}
 		} else {
 			// If path exits we almost always just want to remove and replace it.
@@ -175,6 +185,9 @@ func UnpackLayer(dest string, layer Reader, options *TarOptions) (size int64, er
 					if err := os.RemoveAll(path); err != nil {
 						return 0, err
 					}
+					if err := ioutils.SyncDir(filepath.Dir(path)); err != nil {
+						return 0, err
+					}
 				}
 			}
 
@@ -237,6 +250,9 @@ func UnpackLayer(dest string, layer Reader, options *TarOptions) (size int64, er
 		if err := system.Chtimes(path, hdr.AccessTime, hdr.ModTime); err != nil {
 			return 0, err
 		}
+		if err := ioutils.Sync(path); err != nil {
+			return 0, err
+		}
 	}
 
 	return size, nil
-- 
2.10.2

